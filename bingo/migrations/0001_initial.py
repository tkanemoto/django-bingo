# Generated by Django 2.1.7 on 2019-03-27 00:23

import bingo.models
import colorful.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BingoBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_id', models.IntegerField(blank=True, null=True)),
                ('color', colorful.fields.RGBColorField()),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(blank=True, choices=[(None, 'unrated'), (1, '1 stars'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')], default=None, null=True)),
            ],
            options={
                'ordering': ('-board_id',),
            },
        ),
        migrations.CreateModel(
            name='BingoField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(blank=True, default=None, null=True, validators=[bingo.models.position_validator])),
                ('vote', models.SmallIntegerField(default=0)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bingo.BingoBoard')),
            ],
            options={
                'ordering': ('board', '-position'),
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Topic'), (2, 'Middle'), (3, 'Meta')])),
                ('site', models.ManyToManyField(blank=True, to='sites.Site')),
            ],
            options={
                'ordering': ('word',),
            },
        ),
        migrations.AddField(
            model_name='bingofield',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bingo.Word'),
        ),
        migrations.AddField(
            model_name='bingoboard',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bingo.Game'),
        ),
        migrations.AddField(
            model_name='bingoboard',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='game',
            unique_together={('game_id', 'site')},
        ),
        migrations.AlterUniqueTogether(
            name='bingoboard',
            unique_together={('board_id', 'game')},
        ),
    ]
